/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

The version of the OpenAPI document: v2


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { PipelineVcsCommit } from './pipeline-vcs-commit';

/**
 * VCS information for the pipeline.
 * @export
 * @interface PipelineVcs
 */
export interface PipelineVcs {
    /**
     * Name of the VCS provider (e.g. GitHub, Bitbucket).
     * @type {string}
     * @memberof PipelineVcs
     */
    'provider_name': string;
    /**
     * URL for the repository the trigger targets (i.e. the repository where the PR will be merged). For fork-PR pipelines, this is the URL to the parent repo. For other pipelines, the `origin_` and `target_repository_url`s will be the same.
     * @type {string}
     * @memberof PipelineVcs
     */
    'target_repository_url': string;
    /**
     * The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive. To trigger a pipeline for a PR by number use `pull/<number>/head` for the PR ref or `pull/<number>/merge` for the merge ref (GitHub only).
     * @type {string}
     * @memberof PipelineVcs
     */
    'branch'?: string;
    /**
     * The code review id.
     * @type {string}
     * @memberof PipelineVcs
     */
    'review_id'?: string;
    /**
     * The code review URL.
     * @type {string}
     * @memberof PipelineVcs
     */
    'review_url'?: string;
    /**
     * The code revision the pipeline ran.
     * @type {string}
     * @memberof PipelineVcs
     */
    'revision': string;
    /**
     * The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
     * @type {string}
     * @memberof PipelineVcs
     */
    'tag'?: string;
    /**
     * 
     * @type {PipelineVcsCommit}
     * @memberof PipelineVcs
     */
    'commit'?: PipelineVcsCommit;
    /**
     * URL for the repository where the trigger originated. For fork-PR pipelines, this is the URL to the fork. For other pipelines the `origin_` and `target_repository_url`s will be the same.
     * @type {string}
     * @memberof PipelineVcs
     */
    'origin_repository_url': string;
}

